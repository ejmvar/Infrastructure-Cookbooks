# Nginx proxy configuration for <%= @app_name %>
#

# Permanent redirect 80 => 443 ================================================
server {
  listen 80;
  rewrite ^(.*) https://$host$1 permanent;
}

# Register upstream servers ===================================================
upstream <%= @app_name %>_app_servers {
<%- @app_servers.each do |app_server| %>
  server <%= app_server.ipaddress %>:443; # TODO: use fqdn once dns setup properly
<%- end %>
}

# Secure Proxying
server {
  listen 443 ssl;
  server_name '<%= @fqdn %>';

  # SSL config ================================================================
  ssl_certificate      /etc/ssl/<%= @fqdn %>.crt;
  ssl_certificate_key  /etc/ssl/<%= @fqdn %>.key;
  ssl_protocols        SSLv3 TLSv1; # Do not allow SSLv2
  ssl_ciphers          ALL:!aNULL:!ADH:!eNULL:!LOW:!MEDIUM:!EXP:RC4+RSA:+HIGH;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout  5m;
  ssl_session_cache shared:SSL:10m; # Reuse session => less handshakes => better perfs

  # Proxy config ==============================================================
  location / {
    proxy_pass        https://<%= @app_name %>_app_servers;
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Host  $host;
    proxy_set_header  X-Forwarded-Proto https;
    # Cache assets (Do NOT cache html pages as they contain AuthenticityTokens)
    if ($request_uri ~* ^.+\.(svg|css|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2)$) {
      add_header  Cache-Control public;
      expires max;
    }
  }
  

  # GZip enabled in /etc/nginx/nginx.conf

  # Maintenance Page Rewrite ==================================================

  # Just create a file at /etc/nginx/maintenance-mode.txt and all traffic
  # will be re-written to /maintenance.html

  # This allows people to use images and css in their maintenance.html file
  if ($request_filename ~* \.(css|jpg|gif|png)$) {
    break;
  }

  # Rewrite all the requests to the maintenance.html page if it exists.
  if (-f /etc/nginx/maintenance-mode.txt) { return 503; }
  error_page 503 @503;
  location @503 {
    rewrite  ^(.*)$  /maintenance.html;
  }  

  error_page 502 503 504  /error.html;  
  location = /error.html {  
      root  /data/nginx-error;
  }
}

